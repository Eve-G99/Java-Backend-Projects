server.port=server.port={cipher}{key:config-service-key}AQATDs3vjU3SVDkQg7GFyiUDeMXzafIXtN5VhNkAayv59PMMHXzW+6HqO4LJnk/5Z6iE6fCpBHHX9QWL8DdjluCAzbxgjeIZiMzaGfpO57V4u4sbSzPP2RIv0CA4ouXToyQogcO3gps4gZyKV/kjyJEzta+UkxPQ70f1gn+sAsdUn+jSnUyNzcalpmjrNHn6uyA4LoCtD+ZMi5T6r2AnSCNNTyX72VHoKRj842MjXlvmozUG8QhH1WtqQLARh5Wn3Ylso3IRQAFtEXR/ww/nyAyeZXYyIfPyCbphjDd+RSkMYnY4aNqS4xduwoaixnkA/eybetOoYv5Nh/miTaOeWV5EkETJeYus2EgXLhN0QcXkvtiH67UV0WJmAoCKUg4O0TUfJbuw=

spring.cloud.gateway.routes[0].id=weatherModule
spring.cloud.gateway.routes[0].uri=lb://search
spring.cloud.gateway.routes[0].predicates[0]=Path=/weather/**

spring.cloud.gateway.routes[1].id=detailsModule
spring.cloud.gateway.routes[1].uri=lb://details
spring.cloud.gateway.routes[1].predicates[0]=Path=/details/**
#spring.cloud.gateway.routes[1].filters[0]=StripPrefix=1

spring.cloud.gateway.routes[2].id=securityModule
spring.cloud.gateway.routes[2].uri=lb://security
spring.cloud.gateway.routes[2].predicates[0]=Path=/auth/**

spring.cloud.gateway.discovery.locator.enabled=true

# Ribbon load balancing
myservice.ribbon.NFLoadBalancerRuleClassName=com.netflix.loadbalancer.RandomRule

# Eureka client configuration
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
#eureka.client.registryFetchIntervalSeconds=xx
#ribbon.ServerListRefreshInterval

#actuator endpoint
management.endpoints.web.exposure.include=*

# Eureka client heartbeat interval
#indicates the frequency the client sends heartbeat to server to indicate that it is alive.
eureka.instance.lease-renewal-interval-in-seconds=10
eureka.client.serviceUrl.defaultZone=server.port={cipher}{key:config-service-key}AAUWNQWfXzafIXtN5VhNkAayv59PMMHXzW+6HqO4LJnk/5Z6iE6fCpBHHX9QWL8DdjluCAzbxgjeIZiMzaGfpO57V4u4sbSzPP2RIv0CA4ouXToyQogcO3gps4gZyKV/kjyJEzta+UkxPQ70f1gn+sAsdUn+jSnUyNzcalpmjrNHn6uyA4LoCtD+ZMi5T6r2AnSCNNTyX72VHoKRj842MjXlvmozUG8QhH1WtqQLARh5Wn3Ylso3IRQAFtEXR/ww/nyAyeZXYyIfPyCbphjDd+RSkMYnY4aNqS4xixnkA/eybetOoYv5Nh/miTaOeWV5EkETJeYus2EgXLhN0QcXkvtiH67UV0WJmAoCKUg4O0TUfJbuw=